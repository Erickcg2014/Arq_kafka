spring.application.name=ejercicioKAFKA

# Datos de conexión a la base de datos
spring.datasource.url=${DB_INVENTARIO_URL}
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}
# Configuración JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
# configuración para inicializar con datos
spring.sql.init.mode=always
spring.jpa.open-in-view=false
spring.jpa.defer-datasource-initialization=true
# Puerto del servidor
server.port=8080
spring.jta.enabled=true
spring.jta.narayana.log-dir=target/narayana-log
# Dirección del broker Kafka (nombre del servicio en docker-compose)
spring.kafka.bootstrap-servers=kafka:9092
# Grupo de consumidores del microservicio principal
spring.kafka.consumer.group-id=taller7-group
# Configuración general del consumidor
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
# Configuración del productor (para enviar notificaciones a otros servicios)
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# Retry Configuration
spring.kafka.producer.retries=3
spring.kafka.producer.properties.retry.backoff.ms=1000
# Evita error si el listener arranca antes que Kafka
spring.kafka.listener.missing-topics-fatal=false